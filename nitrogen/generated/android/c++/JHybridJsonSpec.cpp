///
/// JHybridJsonSpec.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

#include "JHybridJsonSpec.hpp"

// Forward declaration of `AnyMap` to properly resolve imports.
namespace NitroModules { class AnyMap; }

#include <NitroModules/AnyMap.hpp>
#include <NitroModules/JAnyMap.hpp>
#include <string>

namespace margelo::nitro::json {

  jni::local_ref<JHybridJsonSpec::jhybriddata> JHybridJsonSpec::initHybrid(jni::alias_ref<jhybridobject> jThis) {
    return makeCxxInstance(jThis);
  }

  void JHybridJsonSpec::registerNatives() {
    registerHybrid({
      makeNativeMethod("initHybrid", JHybridJsonSpec::initHybrid),
    });
  }

  size_t JHybridJsonSpec::getExternalMemorySize() noexcept {
    static const auto method = _javaPart->getClass()->getMethod<jlong()>("getMemorySize");
    return method(_javaPart);
  }

  // Properties
  

  // Methods
  std::shared_ptr<AnyMap> JHybridJsonSpec::parse(const std::string& a) {
    static const auto method = _javaPart->getClass()->getMethod<jni::local_ref<JAnyMap::javaobject>(jni::alias_ref<jni::JString> /* a */)>("parse");
    auto __result = method(_javaPart, jni::make_jstring(a));
    return __result->cthis()->getMap();
  }
  std::string JHybridJsonSpec::stringify(const std::shared_ptr<AnyMap>& a) {
    static const auto method = _javaPart->getClass()->getMethod<jni::local_ref<jni::JString>(jni::alias_ref<JAnyMap::javaobject> /* a */)>("stringify");
    auto __result = method(_javaPart, JAnyMap::create(a));
    return __result->toStdString();
  }

} // namespace margelo::nitro::json
